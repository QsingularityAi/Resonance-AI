{"version":3,"file":"index.umd.js","sources":["../index.ts"],"sourcesContent":["import { ref, watch, provide, inject, onMounted, onBeforeUnmount } from 'vue-demi'\nimport type { InjectionKey, Ref } from 'vue-demi'\nimport { getCurrentInstance } from 'vue-demi'\n\nimport type { Language, Translations, Messages } from '@padcom/vue-i18n-common'\nexport type { Translations } from '@padcom/vue-i18n-common'\n\nexport function getAgentLocale(defaultLocale = 'en') {\n  return globalThis.navigator?.language.split('-')[0] || defaultLocale\n}\n\ntype InternalMessages = Record<string, string>\n\nfunction resolve(path: string[], messages: Messages): InternalMessages {\n  return Object.getOwnPropertyNames(messages)\n    .map(key => {\n      if (typeof messages[key] === 'string') {\n        return { [[...path, key].join('.')]: messages[key] }\n      } else {\n        return resolve([...path, key], messages[key])\n      }\n    })\n    .reduce((acc, entry) => ({ ...acc, ...entry }), {})\n}\n\ntype InternalTranslations = Record<string, Record<string, string>>\n\nfunction transpose(messages: Translations): InternalTranslations {\n  const result = {} as InternalTranslations\n  Object.getOwnPropertyNames(messages).forEach(language => {\n    const keys = resolve([], messages[language])\n    Object.getOwnPropertyNames(keys).forEach(key => {\n      result[key] = result[key] || {}\n      result[key][language] = keys[key]\n    })\n  })\n\n  return result\n}\n\nfunction merge(...translations: InternalTranslations[]) {\n  const result = {} as InternalTranslations\n  translations.forEach(translation => {\n    Object.getOwnPropertyNames(translation).forEach(key => {\n      result[key] = result[key] || {}\n      Object.getOwnPropertyNames(translation[key]).forEach(language => {\n        result[key][language] = translation[key][language]\n      })\n    })\n  })\n\n  return result\n}\n\nfunction resolveTranslations(scope: Scope, local: InternalTranslations, global: InternalTranslations) {\n  return scope === 'global' ? global : scope === 'local-first' ? merge(global, local) : local\n}\n\ninterface Translation {\n  locale: string\n  message: string\n}\n\nfunction getTranslation(\n  key: string,\n  locale: string,\n  fallbackLocale: string,\n  translations: InternalTranslations,\n): Translation {\n  if (translations[key]) {\n    if (translations[key][locale]) {\n      return { locale, message: translations[key][locale] }\n    } else if (translations[key][fallbackLocale]) {\n      return { locale: fallbackLocale, message: translations[key][fallbackLocale] }\n    } else {\n      return { locale: getAgentLocale(), message: key }\n    }\n  } else {\n    return { locale: getAgentLocale(), message: key }\n  }\n}\n\nconst PLACEHOLDER_RX = /{\\s*(\\w+)\\s*}/g\n\nfunction replacePlaceholder(context: Object & Record<string, any>) {\n  return (placeholder: string, slot: string) => {\n    return context.hasOwnProperty(slot) ? context[slot] : placeholder\n  }\n}\n\nexport type PluralizationRule = (choice: number, numberOfAvailableChoices: number) => number\nexport type PluralizationRules = Record<Language, PluralizationRule>\n\nfunction defaultPluralizationRule(count: number, numberOfAvailableChoices: number): number {\n  if (numberOfAvailableChoices === 0) {\n    return 0\n  } else if (numberOfAvailableChoices === 1) {\n    return 0\n  } else if (numberOfAvailableChoices === 2) {\n    switch (count) {\n      case 1: return 0\n      default: return 1\n    }\n  } else {\n    switch (count) {\n      case 0: return 0\n      case 1: return 1\n      default: return 2\n    }\n  }\n}\n\nfunction p(\n  translation: Translation,\n  choice: number,\n  pluralizationRules: PluralizationRules,\n) {\n  const pluralization = pluralizationRules[translation.locale] || defaultPluralizationRule\n  const variants = translation.message.split('|').map(v => v.trim())\n\n  return variants[pluralization(choice, variants.length)]\n}\n\nexport interface CreateI18Options {\n  locale?: string\n  fallbackLocale?: string\n  messages?: Translations\n  pluralizationRules?: PluralizationRules\n}\n\nexport const VueI18NPluralizationRulesSymbol = Symbol('vue-i18n-pluralization-rules') as InjectionKey<PluralizationRules>\nexport const VueI18NTranslationsSymbol = Symbol('vue-i18n-translations') as InjectionKey<Translations>\nexport const VueI18NFallbackLocaleSymbol = Symbol('vue-i18n-fallback-locale') as InjectionKey<Ref<string>>\nexport const VueI18NLocaleSymbol = Symbol('vue-i18n-locale') as InjectionKey<Ref<string>>\n\n/**\n * Global i18n options\n *\n * Those are being stored with the plugin instance.\n */\ninterface GlobalI18n {\n  locale?: Ref<string>\n  fallbackLocale?: Ref<string>\n  translations?: InternalTranslations\n  pluralizationRules?: PluralizationRules\n}\n\n/**\n * Global vue-i18n instance.\n *\n * Enables providing of options for the entire application\n */\nconst i18n: GlobalI18n = {}\n\n/**\n * Initialize the global i18n instance\n */\nexport function createI18n({\n  locale = getAgentLocale(),\n  fallbackLocale = getAgentLocale(),\n  messages = {},\n  pluralizationRules = {},\n}: CreateI18Options = {}) {\n  if (i18n.locale || i18n.fallbackLocale || i18n.translations) {\n    throw new Error('vue-i18n already initialized')\n  }\n\n  i18n.locale = ref(locale)\n  i18n.fallbackLocale = ref(fallbackLocale)\n  i18n.translations = resolveTranslations('global', transpose({}), transpose(messages))\n  i18n.pluralizationRules = pluralizationRules || {}\n\n  return {\n    get locale() {\n      return i18n.locale!.value\n    },\n    set locale(value: string) {\n        i18n.locale!.value = value\n    },\n    get fallbackLocale() {\n      return i18n.fallbackLocale!.value\n    },\n    set fallbackLocale(value: string) {\n      i18n.fallbackLocale!.value = value\n    },\n    get availableLocales() {\n      return Object.getOwnPropertyNames(messages)\n    },\n\n    t(key: string, context: Object & Record<string, any> = {}) {\n      const { message } = getTranslation(key, this.locale, this.fallbackLocale, i18n.translations!)\n      const result = message.replace(PLACEHOLDER_RX, replacePlaceholder(context))\n\n      return result\n    },\n\n    tc(key: string, choice: number, context: Object & Record<string, any> = {}) {\n      const translation = getTranslation(key, this.locale, this.fallbackLocale, i18n.translations!)\n      const variant = p(translation, choice, pluralizationRules)\n      const result = variant.replace(PLACEHOLDER_RX, replacePlaceholder(context))\n\n      return result\n    },\n  }\n}\n\n/**\n * vue-i18n context creator\n *\n * Enables providing the translation context in case you want\n * to have another context in part of your system or if you\n * are wrapping your component tree in a common web component.\n *\n * Counterpart to the i18n plugin\n */\nexport function createI18Context({\n  locale = getAgentLocale(),\n  fallbackLocale = getAgentLocale(),\n  messages = {},\n  pluralizationRules = {},\n}: CreateI18Options) {\n  const localeRef = ref(locale)\n  provide(VueI18NLocaleSymbol, ref(localeRef))\n  const fallbackLocaleRef = ref(fallbackLocale)\n  provide(VueI18NFallbackLocaleSymbol, ref(fallbackLocaleRef))\n  provide(VueI18NTranslationsSymbol, transpose(messages))\n  provide(VueI18NPluralizationRulesSymbol, pluralizationRules)\n\n  return {\n    locale: localeRef,\n    fallbackLocale: fallbackLocaleRef,\n  }\n}\n\nexport type Scope = 'local-first' | 'local' | 'global'\n\n/**\n * Options for `useI18n` composition function\n */\ninterface UseI18nOptions {\n  /**\n   * Defines translation resolution strategy\n   *\n   * - `local-first` means use local translations and if the given key\n   *   is not found try global scope (default)\n   * - `local` means only use local translations.\n   * - `global` means only use global translations.\n   */\n  useScope?: Scope\n}\n\n/**\n * Enables the use of translation in composables and setup function\n */\nexport function useI18n({\n  useScope = 'local-first'\n}: UseI18nOptions = {}) {\n  const locale = i18n.locale || inject(VueI18NLocaleSymbol)\n  const fallbackLocale = i18n.fallbackLocale || inject(VueI18NFallbackLocaleSymbol)\n  const pluralizationRules = i18n.pluralizationRules || inject(VueI18NPluralizationRulesSymbol)\n  const global = i18n.translations || inject(VueI18NTranslationsSymbol)\n  const instance = getCurrentInstance()\n  const local: Translations =\n    // Vue 3\n    (instance?.type as any)?.i18n ||\n    // Vue 2\n    (instance as any)?.proxy?.$options.i18n ||\n    // Fallback\n    {}\n\n  if (!(locale && fallbackLocale && global && pluralizationRules)) {\n    throw new Error('vue-i18n not initialized. Either call createI18n() or createI18nContext()')\n  }\n\n  const translations = resolveTranslations(useScope, transpose(local), global)\n\n  // Force re-paint of the component used here so that the language gets re-calculated\n  watch(locale, () => {\n    instance?.update && instance?.update()\n    instance?.proxy?.$forceUpdate && instance?.proxy?.$forceUpdate()\n  })\n  watch(fallbackLocale, () => {\n    instance?.update && instance?.update()\n    instance?.proxy?.$forceUpdate && instance?.proxy?.$forceUpdate()\n  })\n\n  return {\n    fallbackLocale,\n    locale,\n    get availableLocales() {\n      const result = new Set<string>()\n\n      Object.getOwnPropertyNames(translations).forEach(key => {\n        Object.getOwnPropertyNames(translations[key]).forEach(language => {\n          result.add(language)\n        })\n      })\n\n      return [...result]\n    },\n\n    t(key: string, context: Object & Record<string, any> = {}) {\n      const { message } = getTranslation(key, locale.value, fallbackLocale.value, translations)\n      const result = message.replace(PLACEHOLDER_RX, replacePlaceholder(context))\n\n      return result\n    },\n\n    tc(key: string, choice: number, context: Object & Record<string, any> = {}) {\n      const translation = getTranslation(key, locale.value, fallbackLocale.value, translations)\n      const message = p(translation, choice, pluralizationRules)\n      const result = message.replace(PLACEHOLDER_RX, replacePlaceholder(context))\n\n      return result\n    },\n  }\n}\n"],"names":["getAgentLocale","defaultLocale","_a","resolve","path","messages","key","acc","entry","transpose","result","language","keys","merge","translations","translation","resolveTranslations","scope","local","global","getTranslation","locale","fallbackLocale","PLACEHOLDER_RX","replacePlaceholder","context","placeholder","slot","defaultPluralizationRule","count","numberOfAvailableChoices","p","choice","pluralizationRules","pluralization","variants","v","VueI18NPluralizationRulesSymbol","VueI18NTranslationsSymbol","VueI18NFallbackLocaleSymbol","VueI18NLocaleSymbol","i18n","createI18n","ref","value","message","createI18Context","localeRef","provide","fallbackLocaleRef","useI18n","useScope","inject","instance","getCurrentInstance","_b","watch"],"mappings":"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"}