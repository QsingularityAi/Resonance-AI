{"version":3,"file":"index.mjs","sources":["../index.ts"],"sourcesContent":["import { ref, watch, provide, inject, onMounted, onBeforeUnmount } from 'vue-demi'\nimport type { InjectionKey, Ref } from 'vue-demi'\nimport { getCurrentInstance } from 'vue-demi'\n\nimport type { Language, Translations, Messages } from '@padcom/vue-i18n-common'\nexport type { Translations } from '@padcom/vue-i18n-common'\n\nexport function getAgentLocale(defaultLocale = 'en') {\n  return globalThis.navigator?.language.split('-')[0] || defaultLocale\n}\n\ntype InternalMessages = Record<string, string>\n\nfunction resolve(path: string[], messages: Messages): InternalMessages {\n  return Object.getOwnPropertyNames(messages)\n    .map(key => {\n      if (typeof messages[key] === 'string') {\n        return { [[...path, key].join('.')]: messages[key] }\n      } else {\n        return resolve([...path, key], messages[key])\n      }\n    })\n    .reduce((acc, entry) => ({ ...acc, ...entry }), {})\n}\n\ntype InternalTranslations = Record<string, Record<string, string>>\n\nfunction transpose(messages: Translations): InternalTranslations {\n  const result = {} as InternalTranslations\n  Object.getOwnPropertyNames(messages).forEach(language => {\n    const keys = resolve([], messages[language])\n    Object.getOwnPropertyNames(keys).forEach(key => {\n      result[key] = result[key] || {}\n      result[key][language] = keys[key]\n    })\n  })\n\n  return result\n}\n\nfunction merge(...translations: InternalTranslations[]) {\n  const result = {} as InternalTranslations\n  translations.forEach(translation => {\n    Object.getOwnPropertyNames(translation).forEach(key => {\n      result[key] = result[key] || {}\n      Object.getOwnPropertyNames(translation[key]).forEach(language => {\n        result[key][language] = translation[key][language]\n      })\n    })\n  })\n\n  return result\n}\n\nfunction resolveTranslations(scope: Scope, local: InternalTranslations, global: InternalTranslations) {\n  return scope === 'global' ? global : scope === 'local-first' ? merge(global, local) : local\n}\n\ninterface Translation {\n  locale: string\n  message: string\n}\n\nfunction getTranslation(\n  key: string,\n  locale: string,\n  fallbackLocale: string,\n  translations: InternalTranslations,\n): Translation {\n  if (translations[key]) {\n    if (translations[key][locale]) {\n      return { locale, message: translations[key][locale] }\n    } else if (translations[key][fallbackLocale]) {\n      return { locale: fallbackLocale, message: translations[key][fallbackLocale] }\n    } else {\n      return { locale: getAgentLocale(), message: key }\n    }\n  } else {\n    return { locale: getAgentLocale(), message: key }\n  }\n}\n\nconst PLACEHOLDER_RX = /{\\s*(\\w+)\\s*}/g\n\nfunction replacePlaceholder(context: Object & Record<string, any>) {\n  return (placeholder: string, slot: string) => {\n    return context.hasOwnProperty(slot) ? context[slot] : placeholder\n  }\n}\n\nexport type PluralizationRule = (choice: number, numberOfAvailableChoices: number) => number\nexport type PluralizationRules = Record<Language, PluralizationRule>\n\nfunction defaultPluralizationRule(count: number, numberOfAvailableChoices: number): number {\n  if (numberOfAvailableChoices === 0) {\n    return 0\n  } else if (numberOfAvailableChoices === 1) {\n    return 0\n  } else if (numberOfAvailableChoices === 2) {\n    switch (count) {\n      case 1: return 0\n      default: return 1\n    }\n  } else {\n    switch (count) {\n      case 0: return 0\n      case 1: return 1\n      default: return 2\n    }\n  }\n}\n\nfunction p(\n  translation: Translation,\n  choice: number,\n  pluralizationRules: PluralizationRules,\n) {\n  const pluralization = pluralizationRules[translation.locale] || defaultPluralizationRule\n  const variants = translation.message.split('|').map(v => v.trim())\n\n  return variants[pluralization(choice, variants.length)]\n}\n\nexport interface CreateI18Options {\n  locale?: string\n  fallbackLocale?: string\n  messages?: Translations\n  pluralizationRules?: PluralizationRules\n}\n\nexport const VueI18NPluralizationRulesSymbol = Symbol('vue-i18n-pluralization-rules') as InjectionKey<PluralizationRules>\nexport const VueI18NTranslationsSymbol = Symbol('vue-i18n-translations') as InjectionKey<Translations>\nexport const VueI18NFallbackLocaleSymbol = Symbol('vue-i18n-fallback-locale') as InjectionKey<Ref<string>>\nexport const VueI18NLocaleSymbol = Symbol('vue-i18n-locale') as InjectionKey<Ref<string>>\n\n/**\n * Global i18n options\n *\n * Those are being stored with the plugin instance.\n */\ninterface GlobalI18n {\n  locale?: Ref<string>\n  fallbackLocale?: Ref<string>\n  translations?: InternalTranslations\n  pluralizationRules?: PluralizationRules\n}\n\n/**\n * Global vue-i18n instance.\n *\n * Enables providing of options for the entire application\n */\nconst i18n: GlobalI18n = {}\n\n/**\n * Initialize the global i18n instance\n */\nexport function createI18n({\n  locale = getAgentLocale(),\n  fallbackLocale = getAgentLocale(),\n  messages = {},\n  pluralizationRules = {},\n}: CreateI18Options = {}) {\n  if (i18n.locale || i18n.fallbackLocale || i18n.translations) {\n    throw new Error('vue-i18n already initialized')\n  }\n\n  i18n.locale = ref(locale)\n  i18n.fallbackLocale = ref(fallbackLocale)\n  i18n.translations = resolveTranslations('global', transpose({}), transpose(messages))\n  i18n.pluralizationRules = pluralizationRules || {}\n\n  return {\n    get locale() {\n      return i18n.locale!.value\n    },\n    set locale(value: string) {\n        i18n.locale!.value = value\n    },\n    get fallbackLocale() {\n      return i18n.fallbackLocale!.value\n    },\n    set fallbackLocale(value: string) {\n      i18n.fallbackLocale!.value = value\n    },\n    get availableLocales() {\n      return Object.getOwnPropertyNames(messages)\n    },\n\n    t(key: string, context: Object & Record<string, any> = {}) {\n      const { message } = getTranslation(key, this.locale, this.fallbackLocale, i18n.translations!)\n      const result = message.replace(PLACEHOLDER_RX, replacePlaceholder(context))\n\n      return result\n    },\n\n    tc(key: string, choice: number, context: Object & Record<string, any> = {}) {\n      const translation = getTranslation(key, this.locale, this.fallbackLocale, i18n.translations!)\n      const variant = p(translation, choice, pluralizationRules)\n      const result = variant.replace(PLACEHOLDER_RX, replacePlaceholder(context))\n\n      return result\n    },\n  }\n}\n\n/**\n * vue-i18n context creator\n *\n * Enables providing the translation context in case you want\n * to have another context in part of your system or if you\n * are wrapping your component tree in a common web component.\n *\n * Counterpart to the i18n plugin\n */\nexport function createI18Context({\n  locale = getAgentLocale(),\n  fallbackLocale = getAgentLocale(),\n  messages = {},\n  pluralizationRules = {},\n}: CreateI18Options) {\n  const localeRef = ref(locale)\n  provide(VueI18NLocaleSymbol, ref(localeRef))\n  const fallbackLocaleRef = ref(fallbackLocale)\n  provide(VueI18NFallbackLocaleSymbol, ref(fallbackLocaleRef))\n  provide(VueI18NTranslationsSymbol, transpose(messages))\n  provide(VueI18NPluralizationRulesSymbol, pluralizationRules)\n\n  return {\n    locale: localeRef,\n    fallbackLocale: fallbackLocaleRef,\n  }\n}\n\nexport type Scope = 'local-first' | 'local' | 'global'\n\n/**\n * Options for `useI18n` composition function\n */\ninterface UseI18nOptions {\n  /**\n   * Defines translation resolution strategy\n   *\n   * - `local-first` means use local translations and if the given key\n   *   is not found try global scope (default)\n   * - `local` means only use local translations.\n   * - `global` means only use global translations.\n   */\n  useScope?: Scope\n}\n\n/**\n * Enables the use of translation in composables and setup function\n */\nexport function useI18n({\n  useScope = 'local-first'\n}: UseI18nOptions = {}) {\n  const locale = i18n.locale || inject(VueI18NLocaleSymbol)\n  const fallbackLocale = i18n.fallbackLocale || inject(VueI18NFallbackLocaleSymbol)\n  const pluralizationRules = i18n.pluralizationRules || inject(VueI18NPluralizationRulesSymbol)\n  const global = i18n.translations || inject(VueI18NTranslationsSymbol)\n  const instance = getCurrentInstance()\n  const local: Translations =\n    // Vue 3\n    (instance?.type as any)?.i18n ||\n    // Vue 2\n    (instance as any)?.proxy?.$options.i18n ||\n    // Fallback\n    {}\n\n  if (!(locale && fallbackLocale && global && pluralizationRules)) {\n    throw new Error('vue-i18n not initialized. Either call createI18n() or createI18nContext()')\n  }\n\n  const translations = resolveTranslations(useScope, transpose(local), global)\n\n  // Force re-paint of the component used here so that the language gets re-calculated\n  watch(locale, () => {\n    instance?.update && instance?.update()\n    instance?.proxy?.$forceUpdate && instance?.proxy?.$forceUpdate()\n  })\n  watch(fallbackLocale, () => {\n    instance?.update && instance?.update()\n    instance?.proxy?.$forceUpdate && instance?.proxy?.$forceUpdate()\n  })\n\n  return {\n    fallbackLocale,\n    locale,\n    get availableLocales() {\n      const result = new Set<string>()\n\n      Object.getOwnPropertyNames(translations).forEach(key => {\n        Object.getOwnPropertyNames(translations[key]).forEach(language => {\n          result.add(language)\n        })\n      })\n\n      return [...result]\n    },\n\n    t(key: string, context: Object & Record<string, any> = {}) {\n      const { message } = getTranslation(key, locale.value, fallbackLocale.value, translations)\n      const result = message.replace(PLACEHOLDER_RX, replacePlaceholder(context))\n\n      return result\n    },\n\n    tc(key: string, choice: number, context: Object & Record<string, any> = {}) {\n      const translation = getTranslation(key, locale.value, fallbackLocale.value, translations)\n      const message = p(translation, choice, pluralizationRules)\n      const result = message.replace(PLACEHOLDER_RX, replacePlaceholder(context))\n\n      return result\n    },\n  }\n}\n"],"names":["getAgentLocale","defaultLocale","_a","resolve","path","messages","key","acc","entry","transpose","result","language","keys","merge","translations","translation","resolveTranslations","scope","local","global","getTranslation","locale","fallbackLocale","PLACEHOLDER_RX","replacePlaceholder","context","placeholder","slot","defaultPluralizationRule","count","numberOfAvailableChoices","p","choice","pluralizationRules","pluralization","variants","v","VueI18NPluralizationRulesSymbol","VueI18NTranslationsSymbol","VueI18NFallbackLocaleSymbol","VueI18NLocaleSymbol","i18n","createI18n","ref","value","message","createI18Context","localeRef","provide","fallbackLocaleRef","useI18n","useScope","inject","instance","getCurrentInstance","_b","watch"],"mappings":"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"}